pipeline {
    agent { label 'cicd' }
    //triggers { pollSCM ('* * * * *') }
    parameters {
        choice(name: 'MAVEN_GOAL', choices: ['package', 'install', 'clean'], description: 'Maven Goal')
    }
    stages {
        stage('vcs') {
            steps {
                git url: 'https://github.com/archanaraj-m/dummyspring.git',
                    branch: 'cicd'
            }
        }
        stage('package') {
            //tools {
            //   jdk 'JDK_17_UBUNTU'
            //}
            steps {
                sh "./mvnw ${params.MAVEN_GOAL}"
            }
        }
        stage('junit') {
            steps {
                archiveArtifacts artifacts: '**/spring-petclinic-3.0.0-SNAPSHOT.jar',
                                 onlyIfSuccessful: true
                junit testResults: '**/*.xml'
            }
        } 
        stage("Docker build"){
        sh 'docker build -t spcimage .'
        sh 'docker image list'
        sh 'docker image tag spcimage archanaraj/spcimage:$BUILD_NUMBER'
        sh 'docker image push archanaraj/spcimage:${BUILD_NUMBER}'
        } 
       // withCredentials([string(credentialsId: 'DOCKER_HUB_PASSWORD', variable: 'PASSWORD')]) {
       // sh 'docker login -u archanraj -p password'
        stage("Push Image to Docker Hub"){
        sh 'docker image push  archanaraj/spcimage:${BUILD_NUMBER}'      
        }
        stage('k8s deploy') {
            steps {
                sh 'kubectl apply -f spc.yml'
                sh 'kubectl get all'
            }
        }
    }
}    
